* {
  /* Remove default margin on everything */
  margin: 0;
  /* Remove default padding on everything */
  padding: 0;
  /* Calc `em` based line height, bigger line height for smaller font size and smaller line height for bigger font size: https://kittygiraudel.com/2020/05/18/using-calc-to-figure-out-optimal-line-height/ */
  line-height: calc(0.25rem + 1em + 0.25rem);
}

/* Use a more-intuitive box-sizing model on everything */
*,
::before,
::after {
  box-sizing: border-box;
}

/* Remove border and set sensible defaults for backgrounds, on all elements except fieldset progress and meter */
*:where(:not(fieldset, progress, meter)) {
  border-width: 0;
  border-style: solid;
  background-origin: border-box;
  background-repeat: no-repeat;
}

html {
  /* Allow percentage-based heights in the application */
  block-size: 100%;
  /* Making sure text size is only controlled by font-size */
  -webkit-text-size-adjust: none;
}

/* Smooth scrolling for users that don't prefer reduced motion */
@media (prefers-reduced-motion: no-preference) {
  html:focus-within {
    scroll-behavior: smooth;
  }
}

body {
  /* Improve text rendering */
  -webkit-font-smoothing: antialiased;
  /* https://marco.org/2012/11/15/text-rendering-optimize-legibility */
  text-rendering: optimizeSpeed;
  /* Allow percentage-based heights in the application */
  min-block-size: 100%;
  /* https://developer.mozilla.org/en-US/docs/Web/CSS/scrollbar-gutter#example_2 */
  /* scrollbar-gutter: stable both-edges; Removed until this bug is fixed: https://bugs.chromium.org/p/chromium/issues/detail?id=1318404#c2 */
}

/* Improve media defaults */
:where(img, svg, video, canvas, audio, iframe, embed, object) {
  display: block;
}
:where(img, svg, video) {
  block-size: auto;
  max-inline-size: 100%;
}

/* Remove stroke and set fill colour to the inherited font colour */
:where(svg) {
  stroke: none;
  fill: currentColor;
}

/* SVG's without a fill attribute */
:where(svg):where(:not([fill])) {
  /* Remove fill and set stroke colour to the inherited font colour */
  stroke: currentColor;
  fill: none;
  /* Rounded stroke */
  stroke-linecap: round;
  stroke-linejoin: round;
}

/* Set a size for SVG's without a width attribute */
:where(svg):where(:not([width])) {
  inline-size: 5rem;
}

/* Remove built-in form typography styles */
:where(input, button, textarea, select),
:where(input[type="file"])::-webkit-file-upload-button {
  color: inherit;
  font: inherit;
  font-size: inherit;
  letter-spacing: inherit;
  word-spacing: inherit;
}

/* Change textarea resize to vertical only and block only if the browser supports that */
:where(textarea) {
  resize: vertical;
}
@supports (resize: block) {
  :where(textarea) {
    resize: block;
  }
}

/* Avoid text overflows */
:where(p, h1, h2, h3, h4, h5, h6) {
  overflow-wrap: break-word;
}

/* Fix h1 font size inside article, aside, nav, and section */
h1 {
  font-size: 2em;
}

/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
:where(ul, ol)[role="list"] {
  list-style: none;
}

/* More readable underline style for anchor tags without a class. This could be set on anchor tags globally, but it can cause conflicts. */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make it clear that interactive elements are interactive */
:where(a[href], area, button, input, label[for], select, summary, textarea, [tabindex]:not([tabindex*="-"])) {
  cursor: pointer;
  touch-action: manipulation;
}
:where(input[type="file"]) {
  cursor: auto;
}
:where(input[type="file"])::-webkit-file-upload-button,
:where(input[type="file"])::file-selector-button {
  cursor: pointer;
}

/* Animate focus outline */
@media (prefers-reduced-motion: no-preference) {
  :focus-visible {
    transition: outline-offset 145ms cubic-bezier(0.25, 0, 0.4, 1);
  }
  :where(:not(:active)):focus-visible {
    transition-duration: 0.25s;
  }
}
:where(:not(:active)):focus-visible {
  outline-offset: 5px;
}

/* Make sure users can't select button text */
:where(button, button[type], input[type="button"], input[type="submit"], input[type="reset"]),
:where(input[type="file"])::-webkit-file-upload-button,
:where(input[type="file"])::file-selector-button {
  -webkit-tap-highlight-color: transparent;
  -webkit-touch-callout: none;
  user-select: none;
  text-align: center;
}

/* Disabled cursor for disabled buttons */
:where(button, button[type], input[type="button"], input[type="submit"], input[type="reset"])[disabled] {
  cursor: not-allowed;
}

@import url("https://fonts.googleapis.com/css2?family=Outfit:wght@300;400;600&display=swap");

/* VARIABLE */

:root {
  --font: "Outfit", sans-serif;
  --softBlue: hsl(215, 51%, 70%);
  --cyan: hsl(178, 100%, 50%);
  --mainBG: hsl(217, 54%, 11%);
  --cardBG: hsl(216, 50%, 16%);
  --line: hsl(215, 32%, 27%);
  --white: hsl(0, 0%, 100%);
  --fontSize: 18px;
}

/* VARIABLE */

body {
    font-family: var(--font);
    font-size: var(--fontSize);
    background: var(--mainBG);
    display: flex;
    place-content: center;
    flex-direction: column;
    min-height: 100vh;
    font-weight: 400;
}

.container {
    background-color: var(--cardBG);
    padding: 20px;
    border-radius: 18px;
    color: var(--softBlue);
    max-width: 85%;
    margin-inline: auto;
    -webkit-border-radius: 18px;
    -moz-border-radius: 18px;
    -ms-border-radius: 18px;
    -o-border-radius: 18px;
    /* height: 90vh; */
}

.top_img {
    position: relative;
    cursor: pointer;
}

.top_img::after {
    content: url(images/icon-view.svg);
    background-color: rgba(0, 255, 255, 0.5);
    border-radius: 18px;
    position: absolute;
    inset: 0;
    display: none;
    place-content: center;
    align-items: center;
    transition: .6s ease;
    -webkit-transition: .6s ease;
    -moz-transition: .6s ease;
    -ms-transition: .6s ease;
    -o-transition: .6s ease;
    -webkit-border-radius: 18px;
    -moz-border-radius: 18px;
    -ms-border-radius: 18px;
    -o-border-radius: 18px;
}

.top_img:hover::after {
    display: flex;
}

h1 {
    font-size: 1.25em;
    margin-bottom: 10px;
    color: var(--white);
}

h2 {
    font-size: 1.2em;
    color: var(--cyan);
}

h1, b {
    transition: .3s ease;
    -webkit-transition: .3s ease;
    -moz-transition: .3s ease;
    -ms-transition: .3s ease;
    -o-transition: .3s ease;
}

h1:hover, b:hover {
    color: var(--cyan);
}

.content_description {
    color: var(--softBlue);
}

.main-img {
    border-radius: 18px;
    /* height: 60vh; */
    margin-bottom: 20px;
    -webkit-border-radius: 18px;
    -moz-border-radius: 18px;
    -ms-border-radius: 18px;
    -o-border-radius: 18px;
}

.content_info, .content_author {
    display: flex;
    align-items: center;
}

.content_info {
    justify-content: space-between;
    margin: 20px 0;
    border-bottom: 1px solid var(--line);
    padding-bottom: 20px;
}

.content_info-left, .content_info-right {
    display: flex;
    align-items: center;
    column-gap: 8px;
}

.content_author {
    column-gap: 18px;
}

.content_author img {
    height: 40px;
    width: 40px;
    border: 1px solid var(--white);
    border-radius: 50px;
    -webkit-border-radius: 50px;
    -moz-border-radius: 50px;
    -ms-border-radius: 50px;
    -o-border-radius: 50px;
}

b {
    color: var(--white);
    opacity: .8;
}

a {
    text-decoration: none;
    color: inherit;
}

.attribution {
    text-align: center;
    margin: 20px 0;
    color: var(--softBlue);
}

.attribution a {
    color: var(--white);
    transition: .3s ease;
    -webkit-transition: .3s ease;
    -moz-transition: .3s ease;
    -ms-transition: .3s ease;
    -o-transition: .3s ease;
}

.attribution a:hover {
    color: var(--cyan);
}


@media (min-width: 1280px) {
    .container {
        max-width: 40%;
        margin-top: 3%;
        /* height: 90vh; */
    }

}